{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/// Ensure Office is ready before using the API\nOffice.onReady(function (info) {\n    if (info.host === Office.HostType.Excel) {\n        const settingsButton = document.getElementById('settingsButton');\n        const settingsModal = document.getElementById('settingsModal');\n        const closeSettings = document.getElementById('closeSettings');\n        const settingsForm = document.getElementById('settingsForm');\n        const classificationForm = document.getElementById('classificationForm');\n        const selectRangeButton = document.getElementById('selectRangeButton');\n        const selectCategoriesButton = document.getElementById('selectCategoriesButton');\n        const notification = document.getElementById('notification');\n        const notificationMessage = document.getElementById('notificationMessage');\n        const resultContainer = document.getElementById('result');\n\n        // Utility function to show error or success messages\n        function showNotification(message, isError = true) {\n            notificationMessage.textContent = message;\n            notification.style.backgroundColor = isError ? '#f8d7da' : '#d4edda';\n            notification.style.color = isError ? '#721c24' : '#155724';\n            notification.style.display = 'block';\n\n            setTimeout(() => {\n                notification.style.display = 'none';\n            }, 5000);\n        }\n\n        // Mask API key for display\n        const maskApiKey = (apiKey) => {\n            if (!apiKey || apiKey.length <= 4) return '****';\n            return '********' + apiKey.slice(-4);\n        };\n\n        // Load saved settings from localStorage\n        const loadSettings = () => {\n            const storedApiKey = localStorage.getItem('apiKey');\n            document.getElementById('apiKey').value = storedApiKey ? maskApiKey(storedApiKey) : '';\n            document.getElementById('model').value = localStorage.getItem('model') || 'gpt-4';\n            document.getElementById('maxTokens').value = localStorage.getItem('maxTokens') || '50';\n            document.getElementById('temperature').value = localStorage.getItem('temperature') || '0.5';\n        };\n\n        // Save settings to localStorage\n        const saveSettings = () => {\n            const apiKeyInput = document.getElementById('apiKey').value.trim();\n            const storedApiKey = localStorage.getItem('apiKey');\n\n            // Check if the user has entered a new key or kept the masked one\n            if (apiKeyInput && apiKeyInput !== maskApiKey(storedApiKey)) {\n                localStorage.setItem('apiKey', apiKeyInput); // Save the new API key\n            }\n\n            localStorage.setItem('model', document.getElementById('model').value.trim());\n            localStorage.setItem('maxTokens', document.getElementById('maxTokens').value.trim());\n            localStorage.setItem('temperature', document.getElementById('temperature').value.trim());\n            showNotification('Settings saved successfully!', false);\n            return true;\n        };\n\n        // Open settings modal\n        settingsButton.onclick = () => {\n            loadSettings();\n            settingsModal.style.display = 'block';\n        };\n\n        // Close settings modal\n        closeSettings.onclick = () => {\n            settingsModal.style.display = 'none';\n        };\n\n        // Save settings and close modal\n        settingsForm.onsubmit = (e) => {\n            e.preventDefault();\n            if (saveSettings()) {\n                settingsModal.style.display = 'none';\n            }\n        };\n\n        // Select input range from Excel\n        if (selectRangeButton) {\n            selectRangeButton.onclick = async () => {\n                try {\n                    await Excel.run(async (context) => {\n                        const range = context.workbook.getSelectedRange();\n                        range.load(['address', 'values']);\n                        await context.sync();\n\n                        document.getElementById('inputRange').value = range.address;\n                        document.getElementById('inputRange').dataset.values = JSON.stringify(range.values);\n                        console.log('Selected input range:', range.values);\n                        showNotification('Range selected successfully!', false);\n                    });\n                } catch (error) {\n                    console.error('Error selecting range:', error);\n                    showNotification('Error selecting range: ' + error.message, true);\n                }\n            };\n        }\n\n        // Select categories from Excel\n        if (selectCategoriesButton) {\n            selectCategoriesButton.onclick = async () => {\n                try {\n                    await Excel.run(async (context) => {\n                        const range = context.workbook.getSelectedRange();\n                        range.load(['address', 'values']);\n                        await context.sync();\n\n                        document.getElementById('categories').value = range.address;\n                        document.getElementById('categories').dataset.values = JSON.stringify(range.values);\n                        console.log('Selected categories:', range.values);\n                        showNotification('Categories selected successfully!', false);\n                    });\n                } catch (error) {\n                    console.error('Error selecting categories:', error);\n                    showNotification('Error selecting categories: ' + error.message, true);\n                }\n            };\n        }\n\n        // Handle classification form submission\n        classificationForm.onsubmit = async (e) => {\n            e.preventDefault();\n\n            const apiKey = localStorage.getItem('apiKey');\n            const model = localStorage.getItem('model');\n            const maxTokens = parseInt(localStorage.getItem('maxTokens'), 10);\n            const temperature = parseFloat(localStorage.getItem('temperature'));\n\n            if (!apiKey) {\n                showNotification('Please set your API key in the settings.', true);\n                return;\n            }\n\n            const inputRangeAddress = document.getElementById('inputRange').value;\n            const categoriesAddress = document.getElementById('categories').value;\n            const instructions = document.getElementById('instructions').value;\n\n            const inputRangeValues = JSON.parse(document.getElementById('inputRange').dataset.values || '[]');\n            const categoriesValues = JSON.parse(document.getElementById('categories').dataset.values || '[]');\n\n            if (!inputRangeAddress || !categoriesAddress) {\n                showNotification('Please fill in all required fields!', true);\n                return;\n            }\n\n            try {\n                const payload = {\n                    apiKey, \n                    model,\n                    maxTokens,\n                    temperature,\n                    inputRange: inputRangeAddress,\n                    inputData: inputRangeValues,\n                    categories: categoriesValues.flat(),\n                    instructions\n                };\n\n                \n                console.log('Payload being sent to backend:', payload);\n\n                showNotification('Processing your request...', false);\n\n                const response = await fetch('http://localhost:5000/api/analyze', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify(payload)\n                });\n\n                const result = await response.json();\n                if (response.ok) {\n                    console.log('Response from backend:', result);\n                    resultContainer.textContent = JSON.stringify(result, null, 2);\n                    showNotification('Analysis completed successfully!', false);\n                } else {\n                    console.error('Error from server:', result.error);\n                    showNotification('Error: ' + result.error, true);\n                }\n            } catch (err) {\n                console.error('Error during fetch:', err);\n                showNotification('An error occurred while connecting to the server.', true);\n            }\n        };\n\n        // Initialize the app and check if settings are saved\n        const initializeApp = () => {\n            if (!localStorage.getItem('apiKey')) {\n                settingsModal.style.display = 'block';\n            }\n        };\n\n        initializeApp();\n    }\n});\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"./taskpane.js\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Data Classification Tool</title> <link rel=\\\"stylesheet\\\" href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\"> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\\\" crossorigin=\\\"anonymous\\\"/> </head> <body> <div id=\\\"settingsContainer\\\" class=\\\"hidden\\\"> <button id=\\\"settingsButton\\\" title=\\\"Settings\\\"> <i class=\\\"fas fa-cog\\\"></i> </button> </div> <div id=\\\"settingsModal\\\" class=\\\"modal\\\"> <div class=\\\"modal-content\\\"> <span id=\\\"closeSettings\\\" class=\\\"close\\\">&times;</span> <h2>Settings</h2> <form id=\\\"settingsForm\\\"> <label for=\\\"apiKey\\\">API Key:</label> <input type=\\\"text\\\" id=\\\"apiKey\\\" placeholder=\\\"Enter API Key\\\" required> <label for=\\\"model\\\">Model:</label> <input type=\\\"text\\\" id=\\\"model\\\" placeholder=\\\"e.g., gpt-4\\\" value=\\\"gpt-4o-mini\\\"> <label for=\\\"maxTokens\\\">Max Tokens:</label> <input type=\\\"number\\\" id=\\\"maxTokens\\\" placeholder=\\\"e.g., 50\\\" value=\\\"50\\\" min=\\\"1\\\" max=\\\"50000\\\"> <label for=\\\"temperature\\\">Temperature:</label> <input type=\\\"number\\\" id=\\\"temperature\\\" placeholder=\\\"e.g., 0.5\\\" value=\\\"0.5\\\" step=\\\"0.1\\\" min=\\\"0\\\" max=\\\"1\\\"> <button type=\\\"submit\\\">Save</button> </form> </div> </div> <div id=\\\"mainFormSection\\\"> <h1>Data Classification Tool</h1> <form id=\\\"classificationForm\\\"> <label for=\\\"inputRange\\\">Input Range (Items to Classify):</label> <div> <input type=\\\"text\\\" id=\\\"inputRange\\\" placeholder=\\\"Select a range in Excel or enter manually\\\"> <button type=\\\"button\\\" id=\\\"selectRangeButton\\\">Select Range</button> </div> <br> <label for=\\\"categories\\\">Categories:</label> <div> <input type=\\\"text\\\" id=\\\"categories\\\" placeholder=\\\"Enter categories (e.g., A, B, C) or select from Excel\\\"> <button type=\\\"button\\\" id=\\\"selectCategoriesButton\\\">Select Categories</button> </div> <br> <label for=\\\"instructions\\\">Additional Instructions:</label> <textarea id=\\\"instructions\\\" placeholder=\\\"Enter any additional instructions\\\" rows=\\\"4\\\"></textarea> <br> <button type=\\\"submit\\\">Run Analysis</button> </form> <div id=\\\"notification\\\" style=\\\"display:none;padding:10px;margin-top:10px;background-color:#f8d7da;color:#721c24;border-radius:4px\\\"> <span id=\\\"notificationMessage\\\"></span> </div> <div id=\\\"result\\\"></div> </div> <\" + \"script src=\\\"\" + ___HTML_LOADER_IMPORT_1___ + \"\\\"><\" + \"/script> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","_regeneratorRuntime","t","r","n","defineProperty","value","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","Office","onReady","info","host","HostType","Excel","showNotification","message","isError","notificationMessage","textContent","notification","style","backgroundColor","color","display","setTimeout","settingsButton","getElementById","settingsModal","closeSettings","settingsForm","classificationForm","selectRangeButton","selectCategoriesButton","resultContainer","maskApiKey","apiKey","onclick","storedApiKey","localStorage","getItem","onsubmit","apiKeyInput","preventDefault","trim","setItem","_callee2","_context2","run","_ref2","_callee","context","range","_context","workbook","getSelectedRange","load","sync","address","dataset","JSON","stringify","console","log","_x","t0","error","_callee4","_context4","_ref4","_callee3","_context3","_x2","_ref5","_callee5","model","maxTokens","temperature","inputRangeAddress","categoriesAddress","instructions","inputRangeValues","categoriesValues","payload","response","result","_context5","parseInt","parseFloat","parse","inputRange","inputData","categories","flat","fetch","headers","body","json","ok","_x3","URL"],"sourceRoot":""}